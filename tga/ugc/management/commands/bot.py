from abc import ABC

from aiogram.utils import executor
from django.core.management.base import BaseCommand


from ugc.management.commands.text import text1, text2, text3, text5, text7, text6, text8, text9, text10, text11, \
    text12, text13, text14, \
    text15, text16, text17, text18, text19, text20, text21, text22, text4, text23, text24

from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

bot = Bot(token='1233819640:AAFQrsZViUx1kAEs3uqprxyXt3oFZeGm2_c')
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply(text2, reply_markup=markup1)


# –ö–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞
new_button1 = KeyboardButton('–ù–∞—á–∞—Ç—å')
new_button2 = KeyboardButton('–ü–∞—Ä—Ç–Ω–µ—Ä–∞–º')
new_button3 = KeyboardButton('–ü–æ–º–æ—â—å')


@dp.message_handler(text='–ù–∞—á–∞—Ç—å')
async def new_1(message: types.Message):
    await message.reply(text1, reply_markup=markup2)


@dp.message_handler(text='–ü–∞—Ä—Ç–Ω–µ—Ä–∞–º')
async def new_1(message: types.Message):
    await message.reply('ü§ù –£–≤–∞–∂–∞–µ–º—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä! –í–µ—Ä–æ—è—Ç–Ω–æ. —É –í–∞—Å –Ω–∞–∫–æ–ø–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ‚ùì\n\
–¢–æ–≥–¥–∞ –ø–æ–∏—â–∏ –æ—Ç–≤–µ—Ç—ã –∑–¥–µ—Å—å üëá', reply_markup=markup3)


@dp.message_handler(text='–ü–æ–º–æ—â—å')
async def new_1(message: types.Message):
    await message.reply('‚ùì ‚ùì‚ùì –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞?\n\
                        –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Å –≤–æ–ø—Ä–æ—Å–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä—É, –ª–∏–±–æ –ø–∏—à–∏—Ç–µ –≤ –æ–±—â–∏–π —á–∞—Ç, –≥–¥–µ –≤–∞–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–º–æ–≥—É—Ç.'
                        , reply_markup=markup4)




markup1 = ReplyKeyboardMarkup(resize_keyboard=True).row(new_button1).row(new_button2, new_button3)


# –ö–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å"
start_buttons1 = KeyboardButton('–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å')
start_buttons2 = KeyboardButton('–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å')
start_buttons3 = KeyboardButton('–û –ø—Ä–æ–µ–∫—Ç–µ FairPact')
start_buttons4 = KeyboardButton('_–ù–ê–ó–ê–î_')


@dp.message_handler(text='–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å')
async def new_1(message: types.Message):
    await message.reply(text3, reply_markup=markup5)


@dp.message_handler(text='–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å')
async def new_1(message: types.Message):
    await message.reply(text1, reply_markup=markup6)


@dp.message_handler(text='–û –ø—Ä–æ–µ–∫—Ç–µ FairPact')
async def new_1(message: types.Message):
    await message.reply(text12, reply_markup=markup7)


@dp.message_handler(text='_–ù–ê–ó–ê–î_')
async def new_1(message: types.Message):
    await message.reply(text1, reply_markup=markup2)



markup2 = ReplyKeyboardMarkup(resize_keyboard=True).row(start_buttons1, start_buttons2).row(start_buttons3,
                                                                                            start_buttons4)


# –ö–Ω–æ–ø–∫–∏ "–ü–∞—Ä–∫–Ω–µ—Ä–∞–º"
for_partners_buttons1 = KeyboardButton('–û –∫–æ–º–ø–∞–Ω–∏–∏ WERCA')
for_partners_buttons2 = KeyboardButton('–í–∞—à ID')
for_partners_buttons3 = KeyboardButton('_–ù–ê–ó–ê–î')


@dp.message_handler(text='–û –∫–æ–º–ø–∞–Ω–∏–∏ WERCA')
async def new_1(message: types.Message):
    await message.reply(text19, reply_markup=markup12)


@dp.message_handler(text='–í–∞—à ID')
async def new_1(message: types.Message):
    await message.reply(text13, reply_markup=markup13)


@dp.message_handler(text='_–ù–ê–ó–ê–î')
async def new_1(message: types.Message):
    await message.reply(text1, reply_markup=markup2)

markup3 = ReplyKeyboardMarkup(resize_keyboard=True).row(for_partners_buttons1,
                                                        for_partners_buttons2).row(for_partners_buttons3)
# –ö–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å"
help_buttons1 = KeyboardButton('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å')
help_buttons2 = KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
help_buttons3 = KeyboardButton('–ù–∞–∑–∞–¥_')


@dp.message_handler(text='–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å')
async def new_1(message: types.Message):
    await message.reply('‚ùóÔ∏è –ñ–¥–µ–º –í–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞. –ù–∞–ø–∏—à–∏, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º üëá @bot_questions_fairpact_bot')


@dp.message_handler(text='–ö–æ–Ω—Ç–∞–∫—Ç—ã')
async def new_1(message: types.Message):
    await message.reply('üëâ–í –æ–±—â–µ–º —á–∞—Ç–µ –í–∞–º –ø–æ–º–æ–≥—É—Ç —Å –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –∏ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é—Ç –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º')


@dp.message_handler(text='–ù–∞–∑–∞–¥_')
async def new_1(message: types.Message):
    await message.reply(text1, reply_markup=markup2)


markup4 = ReplyKeyboardMarkup(resize_keyboard=True).row(help_buttons1, help_buttons2).row(help_buttons3)

# –ö–Ω–æ–ø–∫–∏   "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
activate_buttons1 = KeyboardButton('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å')
activate_buttons2 = KeyboardButton('–ö—É–ø–∏—Ç—å ETH')
activate_buttons3 = KeyboardButton('–í—ã–∑–æ–≤ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞')
activate_buttons4 = KeyboardButton('–ù–∞–∑–∞–¥.')


@dp.message_handler(text='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å')
async def new_1(message: types.Message):
    await message.reply(text23, reply_markup=markup8)


@dp.message_handler(text='–ö—É–ø–∏—Ç—å ETH')
async def new_1(message: types.Message):
    await message.reply(text5)


@dp.message_handler(text='–í—ã–∑–æ–≤ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞')
async def new_1(message: types.Message):
    await message.reply(text6, reply_markup=markup9)


@dp.message_handler(text='–ù–∞–∑–∞–¥.')
async def new_1(message: types.Message):
    await message.reply(text1, reply_markup=markup2)

markup5 = ReplyKeyboardMarkup(resize_keyboard=True).add(activate_buttons1, activate_buttons2).row(activate_buttons3,
                                                                                                  activate_buttons4)

# –ö–Ω–æ–ø–∫–∏ "–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å"
profitability_buttons1 = KeyboardButton('–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥')
profitability_buttons2 = KeyboardButton('–ë–æ–Ω—É—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
profitability_buttons3 = KeyboardButton('*-–ù–∞–∑–∞–¥')


@dp.message_handler(text='–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥')
async def new_1(message: types.Message):
    await message.reply(text24, reply_markup=markup10)


@dp.message_handler(text='–ë–æ–Ω—É—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
async def new_1(message: types.Message):
    await message.reply(text13, reply_markup=markup11)


@dp.message_handler(text='*-–ù–∞–∑–∞–¥')
async def new_1(message: types.Message):
    await message.reply('ok', reply_markup=markup2)

markup6 = ReplyKeyboardMarkup(resize_keyboard=True).row(profitability_buttons1,
                                                        profitability_buttons2).row(profitability_buttons3)
# –ö–Ω–æ–ø–∫–∏ "–û –ø—Ä–æ–µ–∫—Ç–µ FairPact"
about_FairPact1 = KeyboardButton('–û —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ')
about_FairPact2 = KeyboardButton('–û –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ')
about_FairPact3 = KeyboardButton('–û –±–ª–æ–∫—á–µ–π–Ω–µ')
about_FairPact4 = KeyboardButton('–û —Å–æ–∑–¥–∞—Ç–µ–ª–µ')
about_FairPact5 = KeyboardButton('–ù–∞–∑–∞–¥:')


@dp.message_handler(text='–û —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ')
async def new_1(message: types.Message):
    await message.reply(text9)


@dp.message_handler(text='–û –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ')
async def new_1(message: types.Message):
    await message.reply(text11)


@dp.message_handler(text='–û –±–ª–æ–∫—á–µ–π–Ω–µ')
async def new_1(message: types.Message):
    await message.reply(text10)


@dp.message_handler(text='–û —Å–æ–∑–¥–∞—Ç–µ–ª–µ')
async def new_1(message: types.Message):
    await message.reply(text18)


@dp.message_handler(text='–ù–∞–∑–∞–¥:')
async def new_1(message: types.Message):
    await message.reply('ok', reply_markup=markup2)


markup7 = ReplyKeyboardMarkup(resize_keyboard=True).row(about_FairPact1, about_FairPact2).row(about_FairPact3,
                                                                                              about_FairPact4).row(about_FairPact5)

# –ö–Ω–æ–ø–∫–∏ "—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"

install_1 = KeyboardButton('–ù–∞ –ø–∫')
install_2 = KeyboardButton('–ù–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ')
install_3 = KeyboardButton('- –ù–∞–∑–∞–¥')


@dp.message_handler(text='–ù–∞ –ø–∫')
async def new_1(message: types.Message):
    await message.reply(text7)


@dp.message_handler(text='–ù–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ')
async def new_1(message: types.Message):
    await message.reply(text4)


@dp.message_handler(text='- –ù–∞–∑–∞–¥')
async def new_1(message: types.Message):
    await message.reply('ok', reply_markup=markup5)

markup8 = ReplyKeyboardMarkup(resize_keyboard=True).row(install_1, install_2).row(install_3)

# –ö–Ω–æ–ø–∫–∏ "–í—ã–∑–æ–≤ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞"

Calling_a_smart_contract_1 = KeyboardButton('–ù–∞ –ü–ö (Metamask)')
Calling_a_smart_contract_2 = KeyboardButton('–ù–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ (Android, IOS)')
Calling_a_smart_contract_3 = KeyboardButton('=-–Ω–∞–∑–∞–¥')


@dp.message_handler(text='–ù–∞ –ü–ö (Metamask)')
async def new_1(message: types.Message):
    await message.reply(text7)


@dp.message_handler(text='–ù–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ (Android, IOS)')
async def new_1(message: types.Message):
    await message.reply(text8)


@dp.message_handler(text='=-–Ω–∞–∑–∞–¥')
async def new_1(message: types.Message):
    await message.reply("–æ–∫", reply_markup=markup5)

markup9 = ReplyKeyboardMarkup(resize_keyboard=True).row(Calling_a_smart_contract_1,
                                                        Calling_a_smart_contract_2).row(Calling_a_smart_contract_1)

# –ö–Ω–æ–ø–∫–∏ "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥"

Marketing_1 = KeyboardButton('1 —É—Ä–æ–≤–µ–Ω—å')
Marketing_2 = KeyboardButton('2 —É—Ä–æ–≤–µ–Ω—å')
Marketing_3 = KeyboardButton('3 —É—Ä–æ–≤–µ–Ω—å')
Marketing_4 = KeyboardButton('4 —É—Ä–æ–≤–µ–Ω—å')
Marketing_5 = KeyboardButton('^–ù–ê–ó–ê–î')


@dp.message_handler(text='1 —É—Ä–æ–≤–µ–Ω—å')
async def new_1(message: types.Message):
    await message.reply('1Ô∏è‚É£ –£–†–û–í–ï–ù–¨'
                        '‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å ‚Äì 0.2 ETH\n\
‚úÖ –ü—Ä–∏–±—ã–ª—å –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è ‚Äì 0.32 ETH\n\
‚úÖ –ö–æ–ª-–≤–æ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ ‚Äì 2 —á–µ–ª–æ–≤–µ–∫–∞')


@dp.message_handler(text='2 —É—Ä–æ–≤–µ–Ω—å')
async def new_1(message: types.Message):
    await message.reply('2Ô∏è‚É£ –£–†–û–í–ï–ù–¨\n\
‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å ‚Äì 0.3 ETH\n\
‚úÖ –ü—Ä–∏–±—ã–ª—å –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è ‚Äì 0.96 ETH\n\
‚úÖ –ö–æ–ª-–≤–æ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ ‚Äì 4 —á–µ–ª–æ–≤–µ–∫–∞')


@dp.message_handler(text='3 —É—Ä–æ–≤–µ–Ω—å')
async def new_1(message: types.Message):
    await message.reply('3Ô∏è‚É£ –£–†–û–í–ï–ù–¨\n\
\n\
‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å  ‚Äì 0.5 ETH\n\
‚úÖ –ü—Ä–∏–±—ã–ª—å –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ —Ç—Ä–µ—Ç—å–µ–≥–æ —É—Ä–æ–≤–Ω—è ‚Äì 3.2 ETH\n\
‚úÖ –ö–æ–ª-–≤–æ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ - 8 —á–µ–ª–æ–≤–µ–∫')


@dp.message_handler(text='4 —É—Ä–æ–≤–µ–Ω—å')
async def new_1(message: types.Message):
    await message.reply('4Ô∏è‚É£ –£–†–û–í–ï–ù–¨\n\
‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å –≤—Ö–æ–¥–∞ ‚Äì 1 ETH\n\
‚úÖ –ü—Ä–∏–±—ã–ª—å –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è ‚Äì 12.8 ETH\n\
‚úÖ –ö–æ–ª-–≤–æ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ - 16 —á–µ–ª–æ–≤–µ–∫')


@dp.message_handler(text='^–ù–ê–ó–ê–î')
async def new_1(message: types.Message):
    await message.reply(text1, reply_markup=markup6)


markup10 = ReplyKeyboardMarkup(resize_keyboard=True).row(Marketing_1, Marketing_2).row(Marketing_3,
                                                                                      Marketing_4).row(Marketing_5)


# –ö–Ω–æ–ø–∫–∏ "–ë–æ–Ω—É—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"

bonus_program_1 = KeyboardButton('–æ—Ç 15%')
bonus_program_2 = KeyboardButton('–æ—Ç 20%')
bonus_program_3 = KeyboardButton('–æ—Ç 25%')
bonus_program_4 = KeyboardButton('–æ—Ç 30%')
bonus_program_5 = KeyboardButton('–Ω–∞–∑–∞–¥-*')


@dp.message_handler(text='–æ—Ç 15%')
async def new_1(message: types.Message):
    await message.reply(text14)


@dp.message_handler(text='–æ—Ç 20%')
async def new_1(message: types.Message):
    await message.reply(text15)


@dp.message_handler(text='–æ—Ç 25%')
async def new_1(message: types.Message):
    await message.reply(text16)


@dp.message_handler(text='–æ—Ç 30%')
async def new_1(message: types.Message):
    await message.reply(text17)


@dp.message_handler(text='–Ω–∞–∑–∞–¥-*')
async def new_1(message: types.Message):
    await message.reply('–æ–∫', reply_markup=markup6)

markup11 = ReplyKeyboardMarkup(resize_keyboard=True).row(bonus_program_1, bonus_program_2).row(bonus_program_3,
                                                                                               bonus_program_4).row(bonus_program_5)

#  –ö–Ω–æ–ø–∫–∏ "–í–∞—à ID"

id_1 = KeyboardButton('–ö–∞–∫ –Ω–∞–π—Ç–∏ —Å–≤–æ–π ID –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ?')
id_2 = KeyboardButton('–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ–∫—É–ø–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è?')
id_3 = KeyboardButton('–ü–æ—á–µ–º—É')
id_4 = KeyboardButton('–ß—Ç–æ')
id_5 = KeyboardButton('–ì–¥–µ')
id_6 = KeyboardButton('–ö–æ–≥–¥–∞')
id_7 = KeyboardButton('–ù–∞–∑–∞–¥!')

markup13 = ReplyKeyboardMarkup(resize_keyboard=True).row(id_1, id_2).row(id_3, id_4).row(id_5, id_6).row(id_7)



@dp.message_handler(text='–ö–∞–∫ –Ω–∞–π—Ç–∏ —Å–≤–æ–π ID –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ?')
async def new_1(message: types.Message):
    await message.reply('–ö–∞–∫ –Ω–∞–π—Ç–∏ —Å–≤–æ–π ID –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ\n\
1.–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ üëâ https://fairpact.ru/structure/\n\
 2. –ö–ª–∏–∫–∞–µ—Ç–µ —Å–ª–µ–≤–∞ –≤–≤–µ—Ä—Ö—É –Ω–∞ "CHANGE ID"\n\
 3. –í –ø–æ–ª–µ –≤–±–∏–≤–∞–µ—Ç–µ 1685 - —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π ID –≤–µ—Ç–∫–∏')


@dp.message_handler(text='–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ–∫—É–ø–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è?')
async def new_1(message: types.Message):
    await message.reply('text')


@dp.message_handler(text='–ü–æ—á–µ–º—É')
async def new_1(message: types.Message):
    await message.reply('üîπ–ü–æ—á–µ–º—É —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Å–≤–æ–π ID –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ ‚ùì\n\
\n\
üî∏ –ü–æ –≤—Å–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏, –∏–∑-–∑–∞ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∏ –Ω–µ–±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Å—Ö–µ–º—ã. –ù–æ –µ—Å—Ç—å –≤—ã—Ö–æ–¥:\n\
üëâ –ó–∞–∫—Ä–æ–π—Ç–µ –æ–¥–Ω—É –∏–∑ –≤–µ—Ç–æ–∫ ID 1689 —Å–ª–µ–≤–∞ –∏ ID 1690 —Å–ø—Ä–∞–≤–∞ –æ—Ç –í–∞—Å.  –°—Ö–µ–º–∞ —Å—Ç–∞–Ω–µ—Ç –±–æ–ª—å—à–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–≤–µ—Ä–Ω—É—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ ¬´–Ω–æ–≥", –∏ —Å—Ç–∞–Ω–µ—Ç –µ—â–µ –±–æ–ª—å—à–µ –∏ –ª—É—á—à–µ –≤–∏–¥–Ω–∞.')


@dp.message_handler(text='–ß—Ç–æ')
async def new_1(message: types.Message):
    await message.reply('üîπ –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç, –µ—Å–ª–∏ —è –Ω–µ –∫—É–ø–ª—é —É—Ä–æ–≤–µ–Ω—å ‚ùì\n\
\n\
üî∏ –¢–æ–≥–¥–∞ –¥–µ–Ω—å–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –í—ã –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ –±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–≤–æ–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤,  —É–π–¥—É—Ç –≤—ã—à–µ. –û–¥–Ω–∞–∫–æ, —ç—Ç–æ –Ω–µ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—ã —Å–æ–≤—Å–µ–º –ø–æ—Ç–µ—Ä—è–ª–∏ —Å–≤–æ—é –ø—Ä–∏–±—ã–ª—å. –ë—ã—Å—Ç—Ä–µ–µ –ø–æ–≤—ã—à–∞–π—Ç–µ —É—Ä–æ–≤–µ–Ω—å, –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–ª–∏–≤—ã –≤–Ω–æ–≤—å –±—É–¥—É—Ç –ø–æ—Å—Ç—É–ø–∞—Ç—å –∫ –í–∞–º.\n\
\n\
‚ùóÔ∏è–û—á–µ–Ω—å –≤–∞–∂–Ω–æ –±—ã—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º –∫ —á–∞—Ç—É –≤ Telegram, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –æ –ø–æ–¥–Ω—è—Ç–∏–∏ —É—Ä–æ–≤–Ω–µ–π.\n\
üëâ–î–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∑–∞–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª –ö–û–ù–¢–ê–ö–¢–´')


@dp.message_handler(text='–ì–¥–µ')
async def new_1(message: types.Message):
    await message.reply('üîπ –ì–¥–µ —è –º–æ–≥—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –µ—Å—Ç—å –ª–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ã –ø–æ–¥ –º–æ–∏–º ID ‚ùì\n\
üî∏ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –Ω–∞ —Å–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ –∞–¥—Ä–µ—Å—É üëâ https://fairpact.ru/structure/')


@dp.message_handler(text='–ö–æ–≥–¥–∞')
async def new_1(message: types.Message):
    await message.reply('üîπ–ö–æ–≥–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–Ω–∏–º–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å? –ö–∞–∫ —è –æ–± —ç—Ç–æ–º —É–∑–Ω–∞—é ‚ùì\n\
üî∏–°–æ–≥–ª–∞—Å–Ω–æ –Ω–∞—à–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, —É—Ä–æ–≤–Ω–∏ –ø–æ–¥–Ω–∏–º–∞—é—Ç—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤—Å–µ–º–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏ –≤ —Ä—è–¥—É. –û –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–Ω—è—Ç—å —É—Ä–æ–≤–µ–Ω—å –í–∞–º —Å–æ–æ–±—â–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—ã –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.\n\
‚ùóÔ∏è–í–∞–∂–Ω–æ –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¢el–µgram –∫–∞–Ω–∞–ª–∞ –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞. \n\
üëâ–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–¥–ø–∏—Å–∞–Ω—ã –ª–∏ –í—ã –Ω–∞ –∫–∞–Ω–∞–ª? –î–ª—è —ç—Ç–æ–≥–æ –∑–∞–π–¥–∏—Ç–µ  –≤ —Ä–∞–∑–¥–µ–ª –ö–û–ù–¢–ê–ö–¢–´')


@dp.message_handler(text='–ù–∞–∑–∞–¥!')
async def new_1(message: types.Message):
    await message.reply(text1, reply_markup=markup3)


# –ö–Ω–æ–ø–∫–∏ "–û –∫–æ–º–ø–∞–Ω–∏–∏ WERCA"

werca_1 = KeyboardButton('–ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã')
werca_2 = KeyboardButton('–†–∞–±–æ—Ç–∞')
werca_3 = KeyboardButton('–ö–æ–º–∞–Ω–¥–∞')
werca_4 = KeyboardButton('–ù–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏')
werca_5 = KeyboardButton('*–ù–∞–∑–∞–¥*')


markup12 = ReplyKeyboardMarkup(resize_keyboard=True).row(werca_1, werca_2).row(werca_3, werca_4).row(werca_5)


@dp.message_handler(text='–ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã')
async def new_1(message: types.Message):
    await message.reply(text20)


@dp.message_handler(text='–†–∞–±–æ—Ç–∞')
async def new_1(message: types.Message):
    await message.reply(text21)


@dp.message_handler(text='–ö–æ–º–∞–Ω–¥–∞')
async def new_1(message: types.Message):
    await message.reply(text22)


@dp.message_handler(text='–ù–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏')
async def new_1(message: types.Message):
    await message.reply(text22)


@dp.message_handler(text='*–ù–∞–∑–∞–¥*')
async def new_1(message: types.Message):
    await message.reply('ok', reply_markup=markup3)


class Command(BaseCommand):
    help = '–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç'

    def handle(self, *args, **options):
        executor.start_polling(dp)
